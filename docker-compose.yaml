services:
  gateway:
    image: ultri/open-platform-gateway:latest
    container_name: ultri-gateway
    restart: on-failure
    ports:
      - "80:80"
      - "443:443"
    env_file: ".env"
    networks:
      - ultri-net
    volumes:
      - "./gateway/config/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf"
      - "./gateway/config/account.key:/etc/openresty/account.key"
      - "./gateway/certs/default-service.key:/etc/openresty/default.key"
      - "./gateway/certs/default-service.pem:/etc/openresty/default.pem"
      - "./gateway/html:/usr/local/openresty/nginx/html"
      - "./logs/gateway:/usr/local/openresty/nginx/logs"
    depends_on:
      - api
      - ultri-auth

  api:
    image: ultri/open-platform-api:latest
    container_name: ultri-api
    ports:
      - "3000:3000"
    env_file: ".env"
    networks:
      - ultri-net
    volumes:
      - "./api/config:/usr/src/api/config"
      - "./api/plugins:/usr/src/api/plugins"
      - "./api/routes:/usr/src/api/routes"
      - "./api/services:/usr/src/api/services"
      - "./api/app.js:/usr/src/api/app.js"

  ultri-auth:
    image: registry.supertokens.io/supertokens/supertokens-postgresql:4.3
    ports:
      - 3567:3567
    container_name: ultri-auth
    env_file: ".env"
    environment: 
      - POSTGRESQL_TABLE_SCHEMA=ultri_auth
    networks:
      - ultri-net
    restart: unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/0.0.0.0/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 0.0.0.0:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  ultri-net:
    external: false
    driver: bridge

